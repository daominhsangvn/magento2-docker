version: '3'
services:
  apache:
    container_name: apache
    build:
      context: .
      dockerfile: build/magento/apache/php-7.4/Dockerfile
    expose:
      - "80"
    volumes:
      - ./src:/var/www/html
      - ~/.composer/cache:/var/www/.composer/cache
      - ~/.npm:/var/www/.npm
      - ./.docker/php/conf.d/memory_limit.ini:/usr/local/etc/php/conf.d/memory_limit.ini
    environment:
      XDEBUG_CONFIG: "remote_host=localhost"
      PHP_IDE_CONFIG: "serverName=Docker"
    depends_on:
      - db
      - elasticsearch
    networks:
      - magento
    restart: unless-stopped
    labels:
      log_name: 'magento_apache'

  beat:
    container_name: log-shipper
    build:
      context: .
      dockerfile: build/magento/filebeat/Dockerfile
      args:
        ELK_VERSION: $ELK_VERSION
    restart: unless-stopped
    command: filebeat -e -strict.perms=false
    user: root # To read the docker socket
    volumes:
      - ./.docker/magento/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - LOGSTASH_HOST=$LOGSTASH_HOST
    networks:
      - magento
    labels:
      log_name: 'magento_filebeat'

  db:
    container_name: database
    tty: true
    restart: always
    build:
      context: .
      dockerfile: build/magento/mysql/Dockerfile
      args:
        MYSQL_VERSION: $MYSQL_VERSION
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - dbdata:/var/lib/mysql
      - ./logs/mysql:/var/log/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
    expose:
      - "3306"
    networks:
      - magento
    labels:
      name: 'database'
      log_name: 'magento_mysql_database'

#  db-exporter:
#    image: prom/mysqld-exporter
#    ports:
#      - '9104:9104'
#    environment:
#      DATA_SOURCE_NAME: root:root@(db:3306)/magento
#    command: /bin/mysqld_exporter collect.binlog_size=true collect.info_schema.processlist=true

  redis:
    container_name: cache
    image: redis
    expose:
      - "6379"
    volumes:
      - cachedata:/data
    networks:
      - magento
    restart: unless-stopped
    labels:
      log_name: 'magento_redis_cache'

  redis-session:
    container_name: session
    image: redis
    volumes:
      - sessiondata:/data
    expose:
      - "6379"
    networks:
      - magento
    restart: unless-stopped
    labels:
      log_name: 'magento_redis_session'

  varnish:
    container_name: varnish
    build:
      context: .
      dockerfile: build/magento/varnish/Dockerfile
#    expose:
#      - "9131" # Exporter
    ports:
      - "80:80"
      - "9131:9131"
    networks:
      - magento
    depends_on:
      - apache
    volumes:
      - ./build/magento/varnish/varnish6.vcl:/etc/varnish/default.vcl
      - ./build/magento/varnish/varnish.secret:/etc/varnish/secret
    environment:
      - CACHE_SIZE=64M
    restart: unless-stopped
    labels:
      log_name: 'magento_varnish'

  elasticsearch:
    container_name: elasticsearch
    build:
      context: .
      dockerfile: build/magento/elasticsearch/Dockerfile
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - node.name=node-1
      - cluster.initial_master_nodes=node-1
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearchdata:/usr/share/elasticsearch/data
    expose:
      - "9200"
    networks:
      - magento
    restart: unless-stopped
    labels:
      log_name: 'magento_elasticsearch'

  node-exporter:
    container_name: node-exporter
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - "9100:9100"
    networks:
      - magento
    restart: unless-stopped

  cadvisor:
    container_name: cadvisor
    image: gcr.io/cadvisor/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - "9101:8080"
    networks:
      - magento
    restart: unless-stopped

networks:
  magento:
    driver: bridge

volumes:
  dbdata:
  cachedata:
  sessiondata:
  elasticsearchdata:
